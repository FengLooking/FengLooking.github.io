<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on dyfblog</title>
    <link>http://www.dyfblog.com/post/</link>
    <description>Recent content in Posts on dyfblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Nov 2020 19:00:34 +0800</lastBuildDate>
    
	<atom:link href="http://www.dyfblog.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记录Django的settings文件常用配置</title>
      <link>http://www.dyfblog.com/post/django_settings/</link>
      <pubDate>Mon, 30 Nov 2020 19:00:34 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/django_settings/</guid>
      <description>&amp;#34;&amp;#34;&amp;#34; Django settings for mxOnline project. Generated by &amp;#39;django-admin startproject&amp;#39; using Django 2.2. For more information on this file, see https://docs.djangoproject.com/en/2.2/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/2.2/ref/settings/ &amp;#34;&amp;#34;&amp;#34; import os import sys # Build paths inside the project like this: os.path.join(BASE_DIR, ...) BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) sys.path.insert(0, os.path.join(BASE_DIR, &amp;#39;apps&amp;#39;)) sys.path.insert(0, os.path.join(BASE_DIR, &amp;#39;extra_apps&amp;#39;)) # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/ # SECURITY WARNING:</description>
    </item>
    
    <item>
      <title>pod自动重启的可能原因</title>
      <link>http://www.dyfblog.com/post/reason_pod_restart/</link>
      <pubDate>Fri, 22 Nov 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/reason_pod_restart/</guid>
      <description>k8s pod自动重启原因（jvm内存设置） k8s集群环境下，docker容器中运行镜像方式启动springboot项目。由于制作的镜像未对JVM</description>
    </item>
    
    <item>
      <title>k8s安装nfs</title>
      <link>http://www.dyfblog.com/post/k8s_install_nfs/</link>
      <pubDate>Fri, 15 Nov 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/k8s_install_nfs/</guid>
      <description>节点规划 192.168.188.133 centos7 2U2G 50G k8s-nfs 搭建nfs服务 #master节点安装nfs yum -y install nfs-utils #创建nfs目录 mkdir -p /nfs/data/ #修改权限 chmod -R 777 /nfs/data #编辑export文件 vim /etc/exports /nfs/data *(rw,no_root_squash,sync) #</description>
    </item>
    
    <item>
      <title>k8s安装promethus</title>
      <link>http://www.dyfblog.com/post/k8s_install_promethus/</link>
      <pubDate>Wed, 06 Nov 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/k8s_install_promethus/</guid>
      <description>记录安装prometheus + grafana 1.从github 下载prometheus git clone https://github.com/coreos/kube-prometheus.git cd kube-prometheus/manifests 2.修改grafana-service.yaml文件，使</description>
    </item>
    
    <item>
      <title>k8s安装helm</title>
      <link>http://www.dyfblog.com/post/k8s_install_helm/</link>
      <pubDate>Tue, 05 Nov 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/k8s_install_helm/</guid>
      <description>下载安装包，并解压 wget https://get.helm.sh/helm-v2.15.2-linux-amd64.tar.gz tar -xvf helm-v2.15.2-linux-amd64.tar.gz cd helm-v2.15.2-linux-amd64/ cp helm /usr/local/bin/ 初始化Helm 并安装tiller Tiller是helm的服务器端，一般运行于kubernetes集群之</description>
    </item>
    
    <item>
      <title>k8s集群搭建</title>
      <link>http://www.dyfblog.com/post/centos_install_k8s/</link>
      <pubDate>Mon, 28 Oct 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/centos_install_k8s/</guid>
      <description>集群规划 master centos7 2U3G 30G 192.168.188.130 node01 centos7 2U3G 30G 192.168.188.131 node02 centos7 2U3G 30G 192.168.188.132 备注：以下操作1~8在所有节点执行，9~10在master节点执行，11~12在node节点执行 最后的</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>http://www.dyfblog.com/post/kubernetes_basic/</link>
      <pubDate>Fri, 25 Oct 2019 20:21:56 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/kubernetes_basic/</guid>
      <description>kubernetes kubernetes是一个开源的，用于管理云平台中多个主机上的容器化的应用。简称K8s，是用8代替8个字符“ubernete”而成的缩写。</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>http://www.dyfblog.com/post/docker_basic/</link>
      <pubDate>Tue, 22 Oct 2019 20:21:56 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/docker_basic/</guid>
      <description>docker Linux 容器的一种封装，提供简单易用的容器使用接口。Docker 中包括三个基本的概念：镜像(Image),容器(Container),仓库(Re</description>
    </item>
    
    <item>
      <title>centos7安装ELK</title>
      <link>http://www.dyfblog.com/post/centos_install_elk/</link>
      <pubDate>Sun, 20 Oct 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/centos_install_elk/</guid>
      <description>Elasticsearch Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索</description>
    </item>
    
    <item>
      <title>centos7安装nexus</title>
      <link>http://www.dyfblog.com/post/centos_install_nexus/</link>
      <pubDate>Sat, 19 Oct 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/centos_install_nexus/</guid>
      <description>获取nexus包 https://sonatype-download.global.ssl.fastly.net/nexus/3/latest-unix.tar.gz https://download.sonatype.com/nexus/3/latest-unix.tar.gz 添加用户 useradd nexus echo &amp;#34;123456&amp;#34; | passwd nexus --stdin 解压nexus的包 tar -zxvf nexus-3.9.0-01-unix.tar.gz mv nexus-3.9.0-01 nexus 配置nexus vi nexus/etc/nexus-default.properties vi nexus/bin/nexus 设置nexus环境变量 NEXUS_HOME=/usr/local/nexus/bin PATH=$PATH:$NEXUS_HOME export PATH NEXUS_HOME 设置开机启动</description>
    </item>
    
    <item>
      <title>centos7安装jdk8</title>
      <link>http://www.dyfblog.com/post/centos_install_jdk8/</link>
      <pubDate>Fri, 18 Oct 2019 20:50:10 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/centos_install_jdk8/</guid>
      <description>一.百度搜索jdk8 二.进入oracle官网下载页面，鼠标放在Sign in 上，点击 Sign in to my Account 三.有账号的输入账号后点击登录，没有账号的创建一个</description>
    </item>
    
    <item>
      <title>centos7安装nginx1.16</title>
      <link>http://www.dyfblog.com/post/centos_install_nginx/</link>
      <pubDate>Thu, 17 Oct 2019 20:55:33 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/centos_install_nginx/</guid>
      <description>安装依赖 yum install -y gcc-c++ pcre pcre-devel zlib zlib-devel 下载nginx包 wget http://nginx.org/download/nginx-1.16.0.tar.gz 解压nginx包 tar -zxvf nginx-1.16.0.tar.gz 编译安装 cd nginx-1.16.0 ./configure make &amp;amp;&amp;amp; make install 启动nginx cd /usr/local/nginx/sbin ./nginx 查看nginx是否运行 ps -ef | grep nginx</description>
    </item>
    
    <item>
      <title>centos7安装MySQL5.7.28</title>
      <link>http://www.dyfblog.com/post/centos_install_mysql/</link>
      <pubDate>Tue, 15 Oct 2019 20:40:41 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/centos_install_mysql/</guid>
      <description>配置yum源 // 1）下载 wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm // 2）安装 rpm -ivh mysql57-community-release-el7-9.noarch.rpm // 执行完成后会在/etc/yum.repos.d/目录下生成两个repo文件mysql-commu</description>
    </item>
    
    <item>
      <title>Win10使用Vmware安装centos7</title>
      <link>http://www.dyfblog.com/post/vmware_install_centos7/</link>
      <pubDate>Sat, 12 Oct 2019 20:50:23 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/vmware_install_centos7/</guid>
      <description>安装前准备 1.Win10 2.VMware Workstation（v15） 3.centos7镜像文件 安装 由于安装过程较简单，此处省略安装过程，接下来讲解安装后的配置 1.</description>
    </item>
    
    <item>
      <title>面试题</title>
      <link>http://www.dyfblog.com/post/interview-questions/</link>
      <pubDate>Thu, 10 Oct 2019 20:17:01 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/interview-questions/</guid>
      <description>1.DNS解析 DNS：Domain Name System，域名系统的缩写。 通过主机名、最终得到主机名对应的ip地址的过程叫做域名解析(或主机名解析)</description>
    </item>
    
    <item>
      <title>Redis基础使用</title>
      <link>http://www.dyfblog.com/post/redis-basicuse/</link>
      <pubDate>Mon, 03 Sep 2018 19:20:01 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/redis-basicuse/</guid>
      <description>Redis：Redis(REmote dictionary server)是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的ke</description>
    </item>
    
    <item>
      <title>MongoDB常用命令</title>
      <link>http://www.dyfblog.com/post/mongodb-common/</link>
      <pubDate>Fri, 03 Aug 2018 19:20:01 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/mongodb-common/</guid>
      <description>切换/创建数据库：use database_name use stuedu 查看所有数据库： show dbs 查看所有集合： show collections 删除当前操作的数据库：db.dropDatabase() db.dropDatabase() 从指定机器上复</description>
    </item>
    
    <item>
      <title>MongoDB基础使用</title>
      <link>http://www.dyfblog.com/post/mongodb-basicuse/</link>
      <pubDate>Thu, 02 Aug 2018 22:22:01 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/mongodb-basicuse/</guid>
      <description>MongoDB：是一个基于分布式文件存储的非关系数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。MongoDB</description>
    </item>
    
    <item>
      <title>Django的Xadmin后台集成富文本Ueditor</title>
      <link>http://www.dyfblog.com/post/django-xadmin-ueditor/</link>
      <pubDate>Wed, 05 Apr 2017 21:20:01 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/django-xadmin-ueditor/</guid>
      <description>我的环境是：Python3.7 + Django2.2 Ueditor：UEditor是由百度开源的富文本编辑器，具有轻量、可定制、用户体验优等特点。 Django</description>
    </item>
    
    <item>
      <title>Django DEBUG=False后静态文件加载失败</title>
      <link>http://www.dyfblog.com/post/django-debug-false/</link>
      <pubDate>Sun, 02 Apr 2017 22:20:01 +0800</pubDate>
      
      <guid>http://www.dyfblog.com/post/django-debug-false/</guid>
      <description>我的环境是：Django2.2 + Python3.7 Q1 将Django的DEBUG设置为False后，静态文件加载失败：报404 原因：Django的DEBUG设</description>
    </item>
    
  </channel>
</rss>