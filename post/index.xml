<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on dyfblogs</title>
    <link>https://fenglooking.github.io/post/</link>
    <description>Recent content in Posts on dyfblogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Sep 2018 19:20:01 +0800</lastBuildDate>
    
	<atom:link href="https://fenglooking.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis基础使用</title>
      <link>https://fenglooking.github.io/post/redis-basicuse/</link>
      <pubDate>Mon, 03 Sep 2018 19:20:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/redis-basicuse/</guid>
      <description>Redis：Redis(REmote dictionary server)是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的ke</description>
    </item>
    
    <item>
      <title>MongoDB常用命令</title>
      <link>https://fenglooking.github.io/post/mongodb-common/</link>
      <pubDate>Fri, 03 Aug 2018 19:20:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/mongodb-common/</guid>
      <description>切换/创建数据库：use database_name use stuedu 查看所有数据库： show dbs 查看所有集合： show collections 删除当前操作的数据库：db.dropDatabase() db.dropDatabase() 从指定机器上复</description>
    </item>
    
    <item>
      <title>MongoDB基础使用</title>
      <link>https://fenglooking.github.io/post/mongodb-basicuse/</link>
      <pubDate>Thu, 02 Aug 2018 22:22:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/mongodb-basicuse/</guid>
      <description>MongoDB：是一个基于分布式文件存储的非关系数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。MongoDB</description>
    </item>
    
    <item>
      <title>Django的Xadmin后台集成富文本Ueditor</title>
      <link>https://fenglooking.github.io/post/django-xadmin-ueditor/</link>
      <pubDate>Wed, 05 Apr 2017 21:20:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/django-xadmin-ueditor/</guid>
      <description>我的环境是：Python3.7 + Django2.2 Ueditor：UEditor是由百度开源的富文本编辑器，具有轻量、可定制、用户体验优等特点。 Django</description>
    </item>
    
    <item>
      <title>Django DEBUG=False后静态文件加载失败</title>
      <link>https://fenglooking.github.io/post/django-debug-false/</link>
      <pubDate>Sun, 02 Apr 2017 22:20:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/django-debug-false/</guid>
      <description>我的环境是：Django2.2 + Python3.7 Q1 将Django的DEBUG设置为False后，静态文件加载失败：报404 原因：Django的DEBUG设</description>
    </item>
    
    <item>
      <title>Python多进程</title>
      <link>https://fenglooking.github.io/post/python-multprocess/</link>
      <pubDate>Fri, 10 Mar 2017 23:37:22 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/python-multprocess/</guid>
      <description>进程：一个程序的执行实例。对操作系统来说：一个任务就是一个进程。 线程：一个进程内往往同时运行着多个子任务，这些子任务就是线程。线程是操作系统</description>
    </item>
    
    <item>
      <title>MySQL常用命令</title>
      <link>https://fenglooking.github.io/post/mysql-common/</link>
      <pubDate>Sun, 05 Mar 2017 20:22:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/mysql-common/</guid>
      <description>MySQL创建用户并添加权限的方式： 1.进入mysql数据库 mysql -u root mysql 2.在mysql界面添加用户及权限 create user &amp;#39;pyjsh&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;pyjsh&amp;#39;; grant all on *.* to pyjsh@&amp;#39;%&amp;#39; identified by &amp;#39;pyjsh&amp;#39;; grant all on *.*</description>
    </item>
    
    <item>
      <title>linux平台虚拟环境依赖安装</title>
      <link>https://fenglooking.github.io/post/virtualenv-install/</link>
      <pubDate>Thu, 02 Mar 2017 21:50:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/virtualenv-install/</guid>
      <description>当你的环境上有多个项目，每个项目所依赖的包版本不同时，搭建多个互不干扰的开发环境就显得很有必要 1.安装依赖包 (sudo) pip install virtualenv virtualenvwrapper 2.在~/.bash_</description>
    </item>
    
    <item>
      <title>SQLite基础使用</title>
      <link>https://fenglooking.github.io/post/sqlite-notes/</link>
      <pubDate>Tue, 28 Feb 2017 23:22:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/sqlite-notes/</guid>
      <description>数据库(database)：存放数据的仓库，是一些关联表的集合。 RDBMS(Relational DataBase Management System)：关系数据库管理系统，是将数据组织为行和列的系统，是所有</description>
    </item>
    
    <item>
      <title>HTTP协议</title>
      <link>https://fenglooking.github.io/post/http-protocol/</link>
      <pubDate>Mon, 10 Oct 2016 20:50:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/http-protocol/</guid>
      <description>HTTP：Hypertext Transfer Protocol，超文本传输协议。是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式。</description>
    </item>
    
    <item>
      <title>CSS文字段落排版常用设置</title>
      <link>https://fenglooking.github.io/post/css-typesetting/</link>
      <pubDate>Thu, 08 Sep 2016 20:22:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/css-typesetting/</guid>
      <description>199.firstp { 200 /* 文字排版：颜色、字号、字体、粗体、斜体、下划线、删除线 */ 201 color: #666; /*颜色*/ 202 font-size: 30px; /*字号*/ 203 font-family: &amp;#34;宋体&amp;#34;; /*字体*</description>
    </item>
    
    <item>
      <title>CSS颜色样式</title>
      <link>https://fenglooking.github.io/post/css-color/</link>
      <pubDate>Mon, 05 Sep 2016 23:13:54 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/css-color/</guid>
      <description>CSS颜色样式设置 1.英文单词设置颜色样式 20.content {color: red;} 2.RGB值设置颜色样式：由R(red)、G(green)、B(blue)三种颜色的比例来配</description>
    </item>
    
    <item>
      <title>HTML常用实体</title>
      <link>https://fenglooking.github.io/post/html-entity/</link>
      <pubDate>Sun, 04 Sep 2016 20:36:29 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/html-entity/</guid>
      <description>name HTML 换行 &amp;lt;br /&amp;gt; 空格 &amp;amp;nbsp; 水平线 &amp;lt;hr /&amp;gt; 左双引号“ &amp;amp;ldquo; 左双引号” &amp;amp;rdquo; 和号&amp;amp; &amp;amp;amp; 短横线 &amp;amp;mdash; 省略号 &amp;amp;hellip; 小于号&amp;lt; &amp;amp;lt; 大于号&amp;gt; &amp;amp;gt; 已注册&amp;reg; &amp;amp;reg; 版权&amp;</description>
    </item>
    
    <item>
      <title>CSS样式在HTML中的位置</title>
      <link>https://fenglooking.github.io/post/css-style-position/</link>
      <pubDate>Sat, 03 Sep 2016 22:00:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/css-style-position/</guid>
      <description>从CSS样式代码插入HTML文件的形式来看可以分为三种插入形式：内联样式、嵌入样式、外部样式。 内联样式：就是将CSS样式写在HTML的开始标</description>
    </item>
    
    <item>
      <title>HTML元素分类</title>
      <link>https://fenglooking.github.io/post/html-element-classify/</link>
      <pubDate>Fri, 02 Sep 2016 18:00:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/html-element-classify/</guid>
      <description>在HTML中，HTML标签元素大体被分为三种不同的类型：内联元素(又叫行内元素)，块状元素，内联块状元素。 一.常用的内联元素有： 199&amp;lt</description>
    </item>
    
    <item>
      <title>linux平台配置pip源</title>
      <link>https://fenglooking.github.io/post/pip-linux-config/</link>
      <pubDate>Sun, 10 Jan 2016 20:50:01 +0800</pubDate>
      
      <guid>https://fenglooking.github.io/post/pip-linux-config/</guid>
      <description>1.在根目录下创建.pip文件夹 mkdir ~/.pip 2.在创建好的.pip文件夹下创建pip源配置文件 touch ~/.pip/pip.conf 3.选择国内某一pip源配置到文件pip.conf</description>
    </item>
    
  </channel>
</rss>